<!DOCTYPE html>
<html>

<head>
    <title>{{ title }}</title>
    <script src="https://cdn.mainnet.cash/mainnet-0.3.41.js"
        integrity="sha384-PX1RK4gTlzMDZZva/AEuVZYgwFTSApIfKBpjTeF6I2nA29uqoNTZJpQTpDLjWHd9"
        crossorigin="anonymous"></script>
    <script src="https://cdn.staticfile.org/jquery/1.10.2/jquery.min.js">
    </script>

</head>

<body>
<div style="margin:0 auto;width:600px">
    <div style="margin:0 auto;width:300px">
    <div style="margin:0 auto;width:124px">
    <h1>hello~~</h1>
    </div>
    <div style="margin:0 auto;width:205px">
    <p>{{ title }}</p>
    </div>

    <div style="margin:0 auto;width:60px">
    <span id="Check_Txt" style="color:red"><h1 id="Check_i">180</h1></span>
    </div>
    </div>
    <p style="text-align: center;">
        <img src="https://cdn.mainnet.cash/wait.svg" style="width: 15em;" id="deposit">

    <div style="background-color:#FFAFFE;width:600px;height:40px;margin:0 auto;">
        <div id="deposit_addr" style="line-height:40px;text-align:center;width:600px;height:40px;"></div>
    </div>
    <p>recieved address : {{ slp }}</p>
    <p>NFT Amount : {{ amount }}</p>
    <p>NFT Price : {{ nft_price }}</p>
    <p>Total Payment : {{ total_payment }}</p>
    <h1 id="message" style="color:red"></h1>
    <script>
        var SetMinute = 180;
        function timesup() {
            alert("Payment Failed");
            window.location.href = "home";
        }
        function post(path, params, method = 'post') {

            // The rest of this code assumes you are not using a library.
            // It can be made less verbose if you use one.
            const form = document.createElement('form');
            form.method = method;
            form.action = path;

            for (const key in params) {
                if (params.hasOwnProperty(key)) {
                    const hiddenField = document.createElement('input');
                    hiddenField.type = 'hidden';
                    hiddenField.name = key;
                    hiddenField.value = params[key];

                    form.appendChild(hiddenField);
                }
            }

            document.body.appendChild(form);
            form.submit();
        }
        const sleep = (delay) => new Promise((resolve) => setTimeout(resolve, delay))
        async function pay_suck(buyer_slp, tx, bch, bch_addr) {
            //alert("Payment Successful!!!");
            //window.location.href = "dbck?buyer_slp=" + buyer_slp + "&tx=" + tx;
            /*$.post("/dbck", {
                buyer_slp: buyer_slp,
                tx: tx
            },*/
            //post("dbck", { "buyer_slp": buyer_slp, "tx": tx, "bch": bch, "bch_addr": bch_addr })
            var mes = document.getElementById("message");
            mes.innerHTML = "Payment Successful!!!";
            
            //await sleep(5000)
            post('dbck', { 'buyer_slp': buyer_slp, 'tx': tx, 'bch': bch, 'bch_addr': bch_addr })
        }
        function Check_Time() {
            SetMinute -= 1;

            var Check_i = document.getElementById("Check_i");

            Check_i.innerHTML = SetMinute;
            if (SetMinute <= 0) {
                timesup()
            }
        }
        var mm = window.setInterval("Check_Time()", 1000);
        async function getnewwallet() {
            const tar_addr = "bitcoincash:qzhppf89yx7d3fsaswceptz88xgf6p2j6v7ylllmxx"//"bchtest:qpy38cwev0qn7ustmyqs47ylpe2t0msxcg0pc9vda9";
            //const wallet = await TestNetWallet.newRandom();
            const buyer_slp = "{{ slp }}";
            const wallet = await Wallet.newRandom();
            const NFTprice = {{ nft_price }};
            const amount = {{ amount| float }};
            const price = {{ total_payment }};
            const temp_wallet = wallet.cashaddr;
            document.querySelector('#deposit').src = wallet.getDepositQr().src;
            document.getElementById("deposit_addr").innerText = wallet.cashaddr;
            console.log(wallet.cashaddr);
            console.log(tar_addr);
            console.log(buyer_slp);
            console.log(price);
            const balance = await wallet.waitForBalance(0.000001, 'bch');
            console.log(balance);
            var txData = await wallet.sendMax(tar_addr);
            console.log(txData);
            console.log(txData.explorerUrl);
            var bl = await wallet.getBalance();
            console.log(bl.bch);
            console.log('successful payment' + bl);
            pay_suck(buyer_slp, txData.explorerUrl, price, wallet.cashaddr);

            return wallet.cashaddr;
        }
        //pay_suc("slp", "123");

        const addr = getnewwallet();

    </script>

    <!-- 
    <script type="text/javascript">
        var SetMinute = 180;
        function timesup() {
            alert("Payment Failed");
            window.location.href = "home";
        }
        function Check_Time() {
            SetMinute -= 1;
            var Check_i = document.getElementById("Check_i");

            Check_i.innerHTML = SetMinute + "ç§’";
            if (SetMinute <= 0) {
                timesup()
            }
        }

        var mm = window.setInterval("Check_Time()", 1000);


    </script>
    -->
    </div>
</body>

</html>